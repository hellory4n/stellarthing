function main()
    print(starry.deg2rad(180))
    print(starry.rad2deg(3.14))
    print(starry.random_base64(10))
    print(starry.clamp(56934, 0, 10))

    print(vec2(1, 2) + vec2(3, 4))
    print(vec2(1, 2) - vec2(3, 4))
    print(vec2(1, 2) * vec2(3, 4))
    print(vec2(1, 2) / vec2(3, 4))
    print(vec2(1, 2) % vec2(3, 4))
    print(-vec2(1, 2))
    print(vec2(1, 2) == vec2(3, 4))
    print(vec2(1, 2) ~= vec2(3, 4))
    print(vec2(1, 2) < vec2(3, 4))
    print(vec2(1, 2) <= vec2(3, 4))
    print(vec2(1, 2) > vec2(3, 4))
    print(vec2(1, 2) >= vec2(3, 4))

    print(vec2i(1, 2) + vec2i(3, 4))
    print(vec2i(1, 2) - vec2i(3, 4))
    print(vec2i(1, 2) * vec2i(3, 4))
    print(vec2i(1, 2) / vec2i(3, 4))
    print(vec2i(1, 2) % vec2i(3, 4))
    print(-vec2i(1, 2))
    print(vec2i(1, 2) == vec2i(3, 4))
    print(vec2i(1, 2) ~= vec2i(3, 4))
    print(vec2i(1, 2) < vec2i(3, 4))
    print(vec2i(1, 2) <= vec2i(3, 4))
    print(vec2i(1, 2) > vec2i(3, 4))
    print(vec2i(1, 2) >= vec2i(3, 4))

    print(vec3(1, 2, 3) + vec3(4, 5, 6))
    print(vec3(1, 2, 3) - vec3(4, 5, 6))
    print(vec3(1, 2, 3) * vec3(4, 5, 6))
    print(vec3(1, 2, 3) / vec3(4, 5, 6))
    print(vec3(1, 2, 3) % vec3(4, 5, 6))
    print(-vec3(1, 2, 3))
    print(vec3(1, 2, 3) == vec3(4, 5, 6))
    print(vec3(1, 2, 3) ~= vec3(4, 5, 6))
    print(vec3(1, 2, 3) < vec3(4, 5, 6))
    print(vec3(1, 2, 3) <= vec3(4, 5, 6))
    print(vec3(1, 2, 3) > vec3(4, 5, 6))
    print(vec3(1, 2, 3) >= vec3(4, 5, 6))

    print(vec3i(1, 2, 3) + vec3i(4, 5, 6))
    print(vec3i(1, 2, 3) - vec3i(4, 5, 6))
    print(vec3i(1, 2, 3) * vec3i(4, 5, 6))
    print(vec3i(1, 2, 3) / vec3i(4, 5, 6))
    print(vec3i(1, 2, 3) % vec3i(4, 5, 6))
    print(-vec3i(1, 2, 3))
    print(vec3i(1, 2, 3) == vec3i(4, 5, 6))
    print(vec3i(1, 2, 3) ~= vec3i(4, 5, 6))
    print(vec3i(1, 2, 3) < vec3i(4, 5, 6))
    print(vec3i(1, 2, 3) <= vec3i(4, 5, 6))
    print(vec3i(1, 2, 3) > vec3i(4, 5, 6))
    print(vec3i(1, 2, 3) >= vec3i(4, 5, 6))

    print(rgb(69, 69, 69))
    print(rgba(69, 69, 69, 69))
    print(COLOR_WHITE);
    print(COLOR_BLACK);
    print(COLOR_TRANSPARENT);

    local audio = Audio.new("assets/ross_tibeeth_jr_hhhh.ogg")
    audio.play(audio)
    audio:stop()
    audio:play()
    audio:pause(false)
    audio:set_volume(0.75)
    audio:set_pan(-0.25)
end

-- just so we get a stack trace
local _, err = xpcall(main, debug.traceback);
if err ~= nil then print(err) end